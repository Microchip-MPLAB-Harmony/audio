/*******************************************************************************
  _LIBQ_Q31Rand:

    _Q31  _LIBQ_Q31Rand (int64_t *pSeed);

  Company:
    Microchip Technology Inc.

  File Name:
    libq_q31_rand.S

  Summary:
    Generate a _Q31 random number.

  Description:
    Generates a _Q31 pseudo-random value based on the seed supplied
    as a parameter.  The first time this function is called,
    the seed value must be supplied by the user;  this initial
    seed value can either be constant or random, depending on
    whether the user wants to generate a repeatable or a
    non-repeatable pseudo-random sequence.

    The function updates the *pSeed value each time it is called.
    The updated *pSeed value must be passed back to the function
    with each subsequent call.

    Warning:  The pseudo-random sequence generated by this
              function may be insufficient for cryptographic use.

*******************************************************************************/

// DOM-IGNORE-BEGIN
/*******************************************************************************
Copyright (c) 2013 released Microchip Technology Inc.  All rights reserved.

Microchip licenses to you the right to use, modify, copy and distribute
Software only when embedded on a Microchip microcontroller or digital signal
controller that is integrated into your product or third party product
(pursuant to the sublicense terms in the accompanying license agreement).

You should refer to the license agreement accompanying this Software for
additional information regarding your rights and obligations.

SOFTWARE AND DOCUMENTATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF
MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.
IN NO EVENT SHALL MICROCHIP OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER
CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR
OTHER LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE OR
CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT OF
SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
(INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
*******************************************************************************/
// DOM-IGNORE-END

.text
.set    micromips
.set    noreorder
.set    nomacro

.global _LIBQ_Q31Rand
.ent    _LIBQ_Q31Rand

_LIBQ_Q31Rand:

# _Q31  _LIBQ_Q31Rand (int64_t *pSeed);
#
# Input parameters:
#     $a0 - Pointer to 64-bit seed value
#
# Output parameter:
#     $v0 - _Q31 output value of the random number generated
#
# Internal register usage:
#     $t0 - temp low word of seed
#     $t1 - temp high word of seed
#     $t5 - temp
#     $t6 - temp
#     $t7 - temp

# Load seed
    lw     $t0,4($a0)          # Load low word of seed
    lw     $t1,0($a0)          # Load high word of seed

# Initialize seed if seed parameter is zero
    bnezc  $t0,SeedNonZero
    bnezc  $t1,SeedNonZero

# Initialize seed
    move   $t1,$a0             # Use address of seed as random value
    rotr   $t0,$t1,16          # Rotate the address for the other word

# The seed is non-zero
SeedNonZero:
    li     $t6,36969
    andi   $t7,$t1,0xFFFF
    multu  $ac0,$t6,$t7
    mflo   $t5
    srl    $t1,16
    add    $t1,$t5,$t1
    sw     $t1,0($a0)          # Save high word

    li     $t6,18000
    andi   $t7,$t0,0xFFFF
    multu  $ac0,$t6,$t7
    mflo   $t5
    srl    $t0,16
    add    $t0,$t5,$t0
    sw     $t0,4($a0)          # Save low word

# Calculate final result
    sll    $t1,$t1,16
    addu   $v0,$t1,$t0

# Return
    jr        $ra
    nop

.end    _LIBQ_Q31Rand

/*******************************************************************************
 End of File
*/
